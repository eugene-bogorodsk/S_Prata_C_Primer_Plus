//
//  queue.h
//  chapter17
//
//  Created by пупсик on 12.05.2021.
//  Copyright © 2021 пупсик. All rights reserved.
//

#ifndef queue_h
#define queue_h

#include <stdbool.h>
#include <stdio.h>
 //здесь необходимо вставить определение типа Item
//typedef int Item;
//переопределяем Item для list_17_9 моделируем киоск в торговом центре

typedef struct item {
    long arrive;
    int processtime;
} Item;

#define MAXQUEUE 10
typedef struct node
{
    Item item;
    struct node *next;
}Node;
typedef struct queue
{
    Node *front;//указатель на начало очереди
    Node *rear;// указатель на конец очереди
    int items; //количество элементов в очереди
} Queue;

//операция:инициалилзация очереди
//предусловие:pq указывает на очередь
//постусловие:очередь инициализирована пустым содержанием
void InitializeQueue(Queue *pq);

//операция: проверка полна ли очередь
//предусловие:pq указывает на ранее инициализированную очередь
//постусловие:возварщает true если очередь полна и false в противном случае
bool QueueIsFull(const Queue *pq);

//операция: проверка пуста ли очередь
//предусловие: pq указывает на ранее нинициализированную очередь
//постусловие: возвращает true если очередь пуста и false в противном случае
bool QueueIsEmpty(const Queue *pq);

//операция:определение количества элементов в очереди
//предусловие:pq указывает на ранее инициализированную очередь
//постусловие: возвращает количество элементов в очереди
int QueueItemCount(const Queue *pq);

//операция: добавление элемента в конец очереди
//предусловие:pq указывает на ранее инициализированную очередь элемент должен быть помещен в конец очереди
//постусловие: если очередь не пуста элемент помещается в конец очереди и функция возвращает true в противном случае очередь  остается неизменной а функция возвращает false
bool EnQueue(Item item,Queue *pq);

//операция: удаление элемента из начала очереди
//предусловие: pq указывает на ранее инициализированную очередь
// постусловие: если очередь не пуста  элемент в начале очереди копируется в *pitem и удаляется из очереди и функция возвращает true елс операция опусташает очередь очередь переустанавливается в пустое состояние Если очередь пуста с самого начала она остается низменной и функция возвращает false
bool DeQueue(Item *pitem,Queue *pq);

//операция: опустошение очереди
//предусловие: pq указывает на ранее инициализованную очередь
//постусловие: очередь пуста
void EmptyTheQueue(Queue *pq);

#endif /// queue_h 

